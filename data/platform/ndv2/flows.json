[
    {
        "id": "26b2e23a74af41fe",
        "type": "tab",
        "label": "全局配置(NDV2平台)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9f91005ddd41fa07",
        "type": "tab",
        "label": "订阅/发布",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8efd8494e6e9245d",
        "type": "tab",
        "label": "接口调用",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "6964f3903689fe45",
        "type": "tab",
        "label": "接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9e1dc3a36bd6482",
        "type": "tab",
        "label": "平台-订阅发布",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ad1e253c2fe408d",
        "type": "tab",
        "label": "平台-接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "197d3e4fa24b0d4f",
        "type": "tab",
        "label": "流程 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b98d81774a39f577",
        "type": "tab",
        "label": "影子协议",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a7e9ad408343191c",
        "type": "tab",
        "label": "其它",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e83211ed03a904de",
        "type": "tab",
        "label": "测试",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f298837cfcb1b75",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "11884",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ca095982007a8dc",
        "type": "mqtt-broker",
        "name": "platform",
        "broker": "172.24.135.38",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b5ef31a7a90ee4e8",
        "type": "mqtt-broker",
        "name": "north",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ab52a17982312cab",
        "type": "mqtt-broker",
        "name": "platform_push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f834f08ecb8a34d6",
        "type": "inject",
        "z": "26b2e23a74af41fe",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "6f7fa7fbf1d6632e"
            ]
        ]
    },
    {
        "id": "fd34535da19f578a",
        "type": "OS",
        "z": "26b2e23a74af41fe",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "1957948141d0853b"
            ]
        ]
    },
    {
        "id": "1957948141d0853b",
        "type": "change",
        "z": "26b2e23a74af41fe",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "b840205b58dd2762"
            ]
        ]
    },
    {
        "id": "b840205b58dd2762",
        "type": "home-dir",
        "z": "26b2e23a74af41fe",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "f38ca29b23bcc38a"
            ]
        ]
    },
    {
        "id": "f38ca29b23bcc38a",
        "type": "change",
        "z": "26b2e23a74af41fe",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "937b1af9f2e78977"
            ]
        ]
    },
    {
        "id": "1bd8fc41df68efbd",
        "type": "inject",
        "z": "26b2e23a74af41fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 260,
        "y": 740,
        "wires": [
            [
                "a6ce0845329a089c"
            ]
        ]
    },
    {
        "id": "a6ce0845329a089c",
        "type": "debug",
        "z": "26b2e23a74af41fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 740,
        "wires": []
    },
    {
        "id": "3345e0db4c61d8f8",
        "type": "link out",
        "z": "26b2e23a74af41fe",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "4a3f7f82d953b07a",
            "e38fb099ed043b99",
            "766eebf0180f727c",
            "f626e79f1785249d"
        ],
        "x": 975,
        "y": 580,
        "wires": []
    },
    {
        "id": "179bf70df886e594",
        "type": "debug",
        "z": "26b2e23a74af41fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 540,
        "wires": []
    },
    {
        "id": "b3d37c9896083d8c",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "数据初始化",
        "func": "let config = msg.payload;\n\nlet _ids = global.get(\"ids\");\n\nObject.keys(config).forEach(key => {\n    global.set(key, config[key])\n})\n\nlet data = global.get(\"data\");\nif (_ids) global.set(\"ids\", _ids);\nlet ids = global.get(\"ids\");\n\nlet app = data.app;\nlet plf = app.platform;\nplf.devices = plf.devices || {};\n\ndata.platform = plf\ndata.devices = plf.devices || {};\ndata.mqtt = plf.mqtt;\ndata.topics = plf.mqtt.topics;\ndata.mongodb = plf.mongodb;\ndata.shadows = plf.shadows;\ndata.ids = ids;\n\nreturn {payload: data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 340,
        "wires": [
            [
                "614d1b92f8c28357"
            ]
        ]
    },
    {
        "id": "407fd2dd87c9275e",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet gids = global.get(\"ids\");\n\nlet expandTopic = {\n    expandStr : function(v, _ids) {\n        let ids = Object.assign({}, gids);\n        ids = Object.assign(ids, _ids || {});\n\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\") || \"\");\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\") || \"\");\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\") || \"\");\n            v = v.replace(/\\{EDG_ID\\}/g, env.get(\"IOT_EDG_ID\") || \"\");\n            v = v.replace(/\\{DIO_ID\\}/g, env.get(\"IOT_DIO_ID\") || \"\");\n            v = v.replace(/\\{PLF_ID\\}/g, env.get(\"IOT_PLF_ID\") || \"\");\n            v = v.replace(/\\{HOSTNAME\\}/g, env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\") || \"\");\n            \n            v = v.replace(/\\{app\\}/g, ids.app || \"\");\n            v = v.replace(/\\{dom\\}/g, ids.dom || \"\");\n            v = v.replace(/\\{dsp\\}/g, ids.dsp || \"\");\n            v = v.replace(/\\{edg\\}/g, ids.edg || \"\");\n            v = v.replace(/\\{dio\\}/g, ids.dio || \"\");\n            v = v.replace(/\\{plf\\}/g, ids.plf || \"\");\n            if (ids.dev) {\n                v = v.replace(/\\{dev\\}/g, ids.dev || \"\");\n                v = v.replace(/\\{pdev\\}/g, ids.pdev || \"0\");\n            }\n        }\n        return v;\n    },\n    expandArray : function(v, _ids) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], _ids);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, _ids) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], _ids);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, _ids) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, _ids);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, _ids);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, _ids)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "5264538bdde939ab"
            ]
        ]
    },
    {
        "id": "5264538bdde939ab",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    if (hd.from.type == \"dev\") {\n        let dysub = false;\n        let dev = data.devices[hd.from.id];\n        if (!dev) {\n            dev = {};\n            dysub = true;\n        }\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n        if (dysub) node.send({device: dev}, null);\n    }\n\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn [null, {payload: data}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "ab7dc2efaff05d9a"
            ],
            [
                "b2cfaf9ee06fab17"
            ]
        ]
    },
    {
        "id": "4f77cf6f6b10695a",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.pref) hd.pref = {};\n    if (!hd.pref.app) hd.pref.app = (ids.app ? ids.app : \"0\");\n    if (!hd.pref.dom) hd.pref.dom = (ids.dom ? ids.dom : \"0\");\n    \n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"plf\";\n    if (!hd.from.id) hd.from.id = ids.plf;\n    if (!hd.to) hd.to = {};\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry) hd.entry = {};\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n    if (!hd.version) hd.version = global.get(\"version\");\n    \n    tpc =   hd.pref.app + \"/\" + hd.pref.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "42f92b430750e6f7"
            ]
        ]
    },
    {
        "id": "b2cfaf9ee06fab17",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n    let keys = Object.keys(objs);\n    keys.forEach(key => {\n        let obj = objs[key];\n        if (typeof obj == \"object\") \n            obj.id = key;\n    })        \n}\n    \nlet keyDot2DUnder = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/\\./g, \"__\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDot2DUnder(obj, recu);\n    })     \n}\n\nlet keyDUnder2Dot = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/__/g, \".\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDUnder2Dot(obj, recu);\n    })     \n}\n\n\ncommon.keyToObjId = keyToObjId;\ncommon.keyDot2DUnder = keyDot2DUnder;\ncommon.keyDUnder2Dot = keyDUnder2Dot;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "4f77cf6f6b10695a"
            ]
        ]
    },
    {
        "id": "974d6949a6ad7e10",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\n\ncommon.expandTopic.expand(data.ids);   \ncommon.expandTopic.expand(data.topics.subs);\ncommon.expandTopic.expand(data.topics.services);\n\ncommon.keyToObjId(data.devices);\n\ndata.app.id = data.ids.app;\ndata.app.platform.id = data.ids.plf;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "179bf70df886e594",
                "3345e0db4c61d8f8",
                "51312cf68234562d"
            ]
        ]
    },
    {
        "id": "937b1af9f2e78977",
        "type": "switch",
        "z": "26b2e23a74af41fe",
        "name": "是否激活？",
        "property": "IOT_ENABLE_PLF_BFY",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "942bc7584eb81826"
            ],
            [
                "299710c13f5a89e9"
            ]
        ]
    },
    {
        "id": "942bc7584eb81826",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "39541d081b5ed50c"
            ]
        ]
    },
    {
        "id": "bbf172ef2da6ade1",
        "type": "json",
        "z": "26b2e23a74af41fe",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "f619ce160f4c80c4"
            ]
        ]
    },
    {
        "id": "39541d081b5ed50c",
        "type": "file in",
        "z": "26b2e23a74af41fe",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "bbf172ef2da6ade1"
            ]
        ]
    },
    {
        "id": "d81264113c44795e",
        "type": "link in",
        "z": "26b2e23a74af41fe",
        "name": "重载配置输入",
        "links": [
            "dc90b1f191aa5f6b"
        ],
        "x": 125,
        "y": 240,
        "wires": [
            [
                "937b1af9f2e78977"
            ]
        ]
    },
    {
        "id": "f619ce160f4c80c4",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "获取数据节点",
        "func": "let config = msg.payload;\nlet plf = config.platforms[\"ndv2\"];\nif (plf && plf.global) {\n    return {\n        payload: plf.global\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "b3d37c9896083d8c"
            ]
        ]
    },
    {
        "id": "299710c13f5a89e9",
        "type": "debug",
        "z": "26b2e23a74af41fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "ab7dc2efaff05d9a",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "订阅上下线主题",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet topic;\nlet ids = {};\nif (msg.dispatcher) {\n    topic = data.topics.dysubs.dsp_evt_status;\n    ids.dsp = msg.dispatcher.id;\n}\n\nif (msg.edge) {\n    topic = data.topics.dysubs.edg_evt_status;\n    ids.edg = msg.edge.id;    \n}\n\nif (msg.device) {\n    topic = data.topics.dysubs.dev_evt_status;\n    ids.dev = msg.device.id;    \n}\n\nif (msg.platform) {\n    topic = data.topics.dysubs.plf_evt_status;\n    ids.plf = msg.platform.id;      \n}\n\nif (topic) {\n    topic = common.expandTopic.expandStr(topic, ids);\n\n    // node.send({\n    //         action: \"unsubscribe\",\n    //         topic: topic\n    // })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: topic\n    })\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "84aa4b3b4ddaf79a",
                "b078344ad79d23e6"
            ]
        ]
    },
    {
        "id": "84aa4b3b4ddaf79a",
        "type": "link out",
        "z": "26b2e23a74af41fe",
        "name": "订阅上下线主题输出",
        "mode": "link",
        "links": [
            "a83b5348326ff6f7"
        ],
        "x": 975,
        "y": 420,
        "wires": []
    },
    {
        "id": "51312cf68234562d",
        "type": "delay",
        "z": "26b2e23a74af41fe",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "aee4451746d9872a",
                "f25c512a20b815d0"
            ]
        ]
    },
    {
        "id": "aee4451746d9872a",
        "type": "link out",
        "z": "26b2e23a74af41fe",
        "name": "上线通知输出",
        "mode": "link",
        "links": [
            "77fb61e230c79669",
            "ac4bb08a7947e764",
            "2b593455b73cf3d9"
        ],
        "x": 975,
        "y": 620,
        "wires": []
    },
    {
        "id": "f25c512a20b815d0",
        "type": "debug",
        "z": "26b2e23a74af41fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 700,
        "wires": []
    },
    {
        "id": "6f7fa7fbf1d6632e",
        "type": "change",
        "z": "26b2e23a74af41fe",
        "name": "version",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "0.0.1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "ids",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "fd34535da19f578a"
            ]
        ]
    },
    {
        "id": "b078344ad79d23e6",
        "type": "debug",
        "z": "26b2e23a74af41fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "614d1b92f8c28357",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "GUID函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n   \nlet guid = function(len, start) {\n    let result = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c){\n        let r = Math.random()*16|0;\n        let v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    })\n    len = len ? len : result.length;\n    return result.substr(start, len);\n}\n\ncommon.guid = guid;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "407fd2dd87c9275e"
            ]
        ]
    },
    {
        "id": "42f92b430750e6f7",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "TSL<->OBJ互转函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n   \nlet objToTslProps = function(obj) {\n    let props = [];\n    Object.keys(obj).forEach(key => {\n        let prop = {\n            identifier: key,\n            value: obj[key]\n        }\n        if (typeof prop.value !== 'object')\n            props.push(prop)\n    })\n    return props;\n}\n\nlet tslPropsToObj = function(props, _obj) {\n    let obj = _obj || {}\n    props.forEach(prop => {\n        obj[prop.identifier] = prop.value\n    })\n    return obj;\n}\n\ncommon.objToTslProps = objToTslProps;\ncommon.tslPropsToObj = tslPropsToObj;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "ef8150be712169ed"
            ]
        ]
    },
    {
        "id": "ef8150be712169ed",
        "type": "function",
        "z": "26b2e23a74af41fe",
        "name": "事件触发器",
        "func": "let EventEmitter = {\n  _events: {} ,\n\n  on: function(event, cb) {\n    const query = this._events[event] || [] \n    query.push(cb)  \n    this._events[event] = query \n    return this\n  },\n\n  off: function(event, cb) {\n    const query = this._events[event] \n    this._events[event] = query && query.filter(fn => fn !== cb) \n    return this\n  },\n\n\n  emit: function(...args) {\n    const query = this._events[args[0]],  params = Array.prototype.slice.call(args, 1) \n    query.forEach(fn => {\n      fn(...params)\n    })\n    return this\n  },\n\n\n  once: function(event, cb) {\n    const wrapperFun = (...args) => {\n      cb(...args) \n      this.off(event, wrapperFun) \n    }\n    this.on(event, wrapperFun) \n    return this\n  }\n}\n\nlet common = global.get(\"common\");\ncommon.eventEmitter = EventEmitter;\nreturn {payload: common};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 580,
        "wires": [
            [
                "974d6949a6ad7e10"
            ]
        ]
    },
    {
        "id": "df8dd8dec1809c3c",
        "type": "mqtt in",
        "z": "9f91005ddd41fa07",
        "name": "终端订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "4ffa2ac42dcae56c",
                "42213b468431c118"
            ]
        ]
    },
    {
        "id": "766eebf0180f727c",
        "type": "link in",
        "z": "9f91005ddd41fa07",
        "name": "连接输入",
        "links": [
            "3345e0db4c61d8f8"
        ],
        "x": 155,
        "y": 280,
        "wires": [
            [
                "089609a6a94c16c1"
            ]
        ]
    },
    {
        "id": "7b1d7b089005087f",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\nlet ids = data.ids;\nif (ids.app && ids.dio) {\n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.subs)\n    })\n    \n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.services)\n    })  \n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.subs)\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.services)\n    })    \n} else {\n    node.send({\n            action: \"unsubscribe\",\n            topic: topics.services.plf_svc_login\n    })  \n    \n    node.send({\n            action: \"subscribe\",\n            topic: topics.services.plf_svc_login\n    })      \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 180,
        "wires": [
            [
                "df8dd8dec1809c3c",
                "592aeee44f1db32a"
            ]
        ]
    },
    {
        "id": "56af3c3d85477bfe",
        "type": "debug",
        "z": "9f91005ddd41fa07",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "192c4773ea2ec4e0",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "缓存数据",
        "func": "msg.topics = msg.topic.split(\"/\");\nlet hd = msg.payload.hd;\nif (!hd.pref) {\n    hd.pref = {\n        app: msg.topics[0],\n        dom: msg.topics[1]\n    }\n}\n\nlet common = global.get(\"common\");\ncommon.cachePayload(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 180,
        "wires": [
            [
                "de1396c419f4cc1c"
            ]
        ]
    },
    {
        "id": "de1396c419f4cc1c",
        "type": "link out",
        "z": "9f91005ddd41fa07",
        "name": "订阅输出",
        "mode": "link",
        "links": [
            "2ff5101df1ab6584",
            "b293cfb8b41ad91f",
            "bcb80ed091975c9a"
        ],
        "x": 1005,
        "y": 180,
        "wires": []
    },
    {
        "id": "0b83d1198c5e50c5",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.hd.tpc = msg.topic;\nmsg.payload.hd.tms=date.valueOf();\nmsg.payload.hd.tm=date.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 180,
        "wires": [
            [
                "56af3c3d85477bfe",
                "192c4773ea2ec4e0"
            ]
        ]
    },
    {
        "id": "e310b9714eb799e7",
        "type": "link in",
        "z": "9f91005ddd41fa07",
        "name": "动态订阅主题",
        "links": [
            "83c403b1c017c665",
            "92d872156e511bd6"
        ],
        "x": 165,
        "y": 140,
        "wires": [
            [
                "df8dd8dec1809c3c",
                "592aeee44f1db32a"
            ]
        ]
    },
    {
        "id": "592aeee44f1db32a",
        "type": "debug",
        "z": "9f91005ddd41fa07",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 100,
        "wires": []
    },
    {
        "id": "4ffa2ac42dcae56c",
        "type": "json",
        "z": "9f91005ddd41fa07",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "0b83d1198c5e50c5"
            ]
        ]
    },
    {
        "id": "42213b468431c118",
        "type": "debug",
        "z": "9f91005ddd41fa07",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "089609a6a94c16c1",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\ndata.mqtt.clientid = data.mqtt.clientid || (data.ids.plf + \"-\" + common.guid(8));\n\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: false,\n    clientid: data.mqtt.clientid\n}\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 280,
        "wires": [
            [
                "1e6fc2507d1283dd"
            ]
        ]
    },
    {
        "id": "ee7b5e5d591e9aa0",
        "type": "json",
        "z": "9f91005ddd41fa07",
        "name": "",
        "property": "broker.will.payload",
        "action": "str",
        "pretty": false,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "df8dd8dec1809c3c",
                "7b1d7b089005087f"
            ]
        ]
    },
    {
        "id": "1e6fc2507d1283dd",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "遗嘱消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n      app: \"0\",\n      dom: \"0\"\n    },\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.dsp,\n    online: 0\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet will = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.will = will;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "ee7b5e5d591e9aa0"
            ]
        ]
    },
    {
        "id": "babb7be2a4f1dd6e",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "发布主题",
        "func": "let common = global.get(\"common\")\nif (!msg.topic)\n    msg.topic = common.getHDTopic(msg.payload.hd);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "af027e93557a1fb5",
                "4cea1483275859bb",
                "9f20bff15dec0238"
            ]
        ]
    },
    {
        "id": "af027e93557a1fb5",
        "type": "mqtt out",
        "z": "9f91005ddd41fa07",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4f298837cfcb1b75",
        "x": 540,
        "y": 580,
        "wires": []
    },
    {
        "id": "cf0f8344d0a0ac5f",
        "type": "link in",
        "z": "9f91005ddd41fa07",
        "name": "mqtt发布",
        "links": [
            "9b3a8e543bd70406",
            "5002cb933f4b4eb5",
            "cb5a80219ea82576",
            "befe5b1ac4389423",
            "8f5000be83384a7a",
            "a6df7d880adde7dd",
            "9bdce921275b0acd",
            "4a80f8f54efedd8e",
            "f2d3874c6b2d73f3",
            "250ffb893d37d89a",
            "c7b7c2d7a905a76d"
        ],
        "x": 265,
        "y": 580,
        "wires": [
            [
                "babb7be2a4f1dd6e"
            ]
        ]
    },
    {
        "id": "4cea1483275859bb",
        "type": "debug",
        "z": "9f91005ddd41fa07",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 660,
        "wires": []
    },
    {
        "id": "9f20bff15dec0238",
        "type": "debug",
        "z": "9f91005ddd41fa07",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 740,
        "wires": []
    },
    {
        "id": "e132c6e81240c320",
        "type": "function",
        "z": "9f91005ddd41fa07",
        "name": "中转",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: msg.payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 900,
        "wires": [
            [
                "babb7be2a4f1dd6e"
            ]
        ]
    },
    {
        "id": "3ce99a88bd180444",
        "type": "link in",
        "z": "9f91005ddd41fa07",
        "name": "中转输入",
        "links": [
            "154e87ad105afaf5"
        ],
        "x": 275,
        "y": 900,
        "wires": [
            [
                "e132c6e81240c320"
            ]
        ]
    },
    {
        "id": "b9328bf2d554bb5d",
        "type": "inject",
        "z": "9f91005ddd41fa07",
        "name": "连接",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "df8dd8dec1809c3c"
            ]
        ]
    },
    {
        "id": "43da75f592f1ee8b",
        "type": "inject",
        "z": "9f91005ddd41fa07",
        "name": "断开",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "df8dd8dec1809c3c"
            ]
        ]
    },
    {
        "id": "4a3f7f82d953b07a",
        "type": "link in",
        "z": "8efd8494e6e9245d",
        "name": "登入请求",
        "links": [
            "3345e0db4c61d8f8"
        ],
        "x": 205,
        "y": 240,
        "wires": [
            [
                "b16097ae462d6336"
            ]
        ]
    },
    {
        "id": "3e7f39e24a30e622",
        "type": "delay",
        "z": "8efd8494e6e9245d",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "7e99c4ddaa8519dc"
            ]
        ]
    },
    {
        "id": "7e99c4ddaa8519dc",
        "type": "function",
        "z": "8efd8494e6e9245d",
        "name": "登入请求",
        "func": "let data = global.get(\"data\");\nlet ids = data.ids;\nreturn {\n    payload: {\n        hd: {\n            pref: {\n                app: ids.app,\n                dom: \"0\"\n            },\n            to: {\n                type: \"0\",\n                id: \"0\"\n            },\n            entry: {\n                type: \"svc\",\n                id: \"login\"\n            }\n        },\n        pld: {\n            id: data.ids.plf\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "0c7216aa47bb099c",
                "4f5a9b2815a94c14",
                "4a80f8f54efedd8e"
            ]
        ]
    },
    {
        "id": "0c7216aa47bb099c",
        "type": "trigger",
        "z": "8efd8494e6e9245d",
        "name": "超时5秒",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 580,
        "y": 300,
        "wires": [
            [],
            [
                "3e7f39e24a30e622"
            ]
        ]
    },
    {
        "id": "ebc3c792bc39e414",
        "type": "change",
        "z": "8efd8494e6e9245d",
        "name": "重置",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "0c7216aa47bb099c"
            ]
        ]
    },
    {
        "id": "336950a5e8a146e7",
        "type": "link in",
        "z": "8efd8494e6e9245d",
        "name": "重置登入请求",
        "links": [
            "87bda24bd97b90b7",
            "7cc27320956b5354",
            "e15f8affc75b6294",
            "77d19c6b68bc8a7b"
        ],
        "x": 205,
        "y": 300,
        "wires": [
            [
                "ebc3c792bc39e414"
            ]
        ]
    },
    {
        "id": "d54f5ee6626eb01a",
        "type": "comment",
        "z": "8efd8494e6e9245d",
        "name": "登入",
        "info": "",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "4f5a9b2815a94c14",
        "type": "debug",
        "z": "8efd8494e6e9245d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 200,
        "wires": []
    },
    {
        "id": "4a80f8f54efedd8e",
        "type": "link out",
        "z": "8efd8494e6e9245d",
        "name": "",
        "mode": "link",
        "links": [
            "774d0cb8ef787fc2",
            "cf0f8344d0a0ac5f"
        ],
        "x": 1045,
        "y": 320,
        "wires": []
    },
    {
        "id": "a72816de90aa2130",
        "type": "function",
        "z": "8efd8494e6e9245d",
        "name": "状态发布",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n        app: \"0\",\n        dom: \"0\"\n    },\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.plf,\n    online: 1\n};\n\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    },\n    qos: 2,\n    retain: true\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 420,
        "wires": [
            [
                "2d6bb31dafa35de8",
                "4a80f8f54efedd8e"
            ]
        ]
    },
    {
        "id": "ac4bb08a7947e764",
        "type": "link in",
        "z": "8efd8494e6e9245d",
        "name": "状态发布输入",
        "links": [
            "aee4451746d9872a",
            "bd442c488be65a35"
        ],
        "x": 205,
        "y": 420,
        "wires": [
            [
                "a72816de90aa2130"
            ]
        ]
    },
    {
        "id": "2d6bb31dafa35de8",
        "type": "debug",
        "z": "8efd8494e6e9245d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "b16097ae462d6336",
        "type": "function",
        "z": "8efd8494e6e9245d",
        "name": "未登入？",
        "func": "let data = global.get(\"data\");\nif (!data.ids.app || !data.ids.dio) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "3e7f39e24a30e622"
            ]
        ]
    },
    {
        "id": "f7a53686ee14b7e0",
        "type": "function",
        "z": "8efd8494e6e9245d",
        "name": "状态上线ToDIO",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nif (data.ids.dio) {\n    let hd = {\n        pref: {\n            app: \"0\",\n            dom: \"0\"\n        },\n        to: {\n            type: \"0\",\n            id: \"0\"\n        },\n        entry: {\n            type: \"evt\",\n            id: \"status\"\n        },\n        stp: 1,\n        version: global.get(\"version\")\n    };\n    \n    let pld = {\n        id: data.ids.plf,\n        online: 1\n    };\n    \n    return {\n        payload:{\n            hd: hd,\n            pld: pld\n        }\n    };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 520,
        "wires": [
            [
                "4a80f8f54efedd8e",
                "2d6bb31dafa35de8"
            ]
        ]
    },
    {
        "id": "a92437edee18e0ef",
        "type": "inject",
        "z": "8efd8494e6e9245d",
        "name": "定时上报",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "x": 550,
        "y": 520,
        "wires": [
            [
                "f7a53686ee14b7e0"
            ]
        ]
    },
    {
        "id": "b030fc2c10509130",
        "type": "link in",
        "z": "6964f3903689fe45",
        "name": "接口处理输入",
        "links": [
            "177dc66ad0487383"
        ],
        "x": 135,
        "y": 460,
        "wires": [
            [
                "75cfdef15b3f4269",
                "f439a04eb625bde9"
            ]
        ]
    },
    {
        "id": "b7f96919c0750c4b",
        "type": "switch",
        "z": "6964f3903689fe45",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "handshake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "report",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "penet",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "offline",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "resetconfig",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_joined",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_leave",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_interview",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get_gpio",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set_gpio",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "rfir_sniff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "rfir_send",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "intranet",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 20,
        "x": 750,
        "y": 280,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "b9d354b64d5593e9"
            ],
            [],
            [],
            [
                "5ddb2a13593bfb11"
            ],
            [
                "5ddb2a13593bfb11"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "5ddb2a13593bfb11"
            ]
        ]
    },
    {
        "id": "641d14d6c4e9754f",
        "type": "switch",
        "z": "6964f3903689fe45",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "3ec742f94d42e36a"
            ],
            [
                "08aa87d1ed05f2c9"
            ]
        ]
    },
    {
        "id": "dc5c46c2f37abd3c",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 600,
        "wires": []
    },
    {
        "id": "b9d354b64d5593e9",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "属性上报",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_prop;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.pid,\n    dev: attrs.id\n}\ntopic = common.expandTopic.expand(topic, ids);\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(10),\n    message_type: \"properties_notify\",\n    device_id: attrs.id,\n    send_time: new Date().valueOf(),\n    properties: common.objToTslProps(pld)\n}\n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 320,
        "wires": [
            [
                "c2f706b387b16375",
                "5d093e038fe0922d",
                "abf7b206f8c26611"
            ]
        ]
    },
    {
        "id": "c2f706b387b16375",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 340,
        "wires": []
    },
    {
        "id": "5d093e038fe0922d",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 380,
        "wires": []
    },
    {
        "id": "abf7b206f8c26611",
        "type": "link out",
        "z": "6964f3903689fe45",
        "name": "",
        "mode": "link",
        "links": [
            "bdaf4010e521d69d"
        ],
        "x": 1185,
        "y": 700,
        "wires": []
    },
    {
        "id": "08aa87d1ed05f2c9",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "设置响应",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_srv;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.pid,\n    dev: attrs.id\n}\ntopic = common.expandTopic.expand(topic, ids);\n\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(16),\n    message_type: \"properties_set_feedback\",\n    related_message_id: hd.sid,\n    device_id: attrs.id,\n    result_code: ((pld && (pld._success === 0 || pld._success === false )) ? 1: 0),\n    properties: common.objToTslProps(pld)\n    \n}\n\n \n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 540,
        "wires": [
            [
                "abf7b206f8c26611",
                "33131668263782e4"
            ]
        ]
    },
    {
        "id": "3ec742f94d42e36a",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "查询响应",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_srv;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.pid,\n    dev: attrs.id\n}\ntopic = common.expandTopic.expand(topic, ids);\n\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(16),\n    message_type: \"properties_get_feedback\",\n    related_message_id: hd.sid,\n    device_id: attrs.id,\n    result_code: 0,\n    properties: common.objToTslProps(pld)\n}\n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 500,
        "wires": [
            [
                "abf7b206f8c26611",
                "33131668263782e4"
            ]
        ]
    },
    {
        "id": "33131668263782e4",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 220,
        "wires": []
    },
    {
        "id": "907f63271ba3b677",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "边缘事件请求",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 0 && hd.entry.type == \"evt\"  ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 760,
        "wires": [
            [
                "7e2f49364209061b"
            ]
        ]
    },
    {
        "id": "eddf2eca5d8ed190",
        "type": "link in",
        "z": "6964f3903689fe45",
        "name": "",
        "links": [
            "627971cad7053833"
        ],
        "x": 145,
        "y": 760,
        "wires": [
            [
                "907f63271ba3b677"
            ]
        ]
    },
    {
        "id": "7e2f49364209061b",
        "type": "switch",
        "z": "6964f3903689fe45",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device_joined",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_interview",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_leave",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 760,
        "wires": [
            [
                "8b14afc4687061f2"
            ],
            [
                "8b14afc4687061f2"
            ],
            [
                "60b7f9dbb6ddb214"
            ]
        ]
    },
    {
        "id": "8b14afc4687061f2",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "device_joined",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_ctrl;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.id,\n    dev: pld.id\n}\ntopic = common.expandTopic.expand(topic, ids);\n\nlet props = {\n    org_id: pld.dom_id,\n    manufacturer: pld.vendor,\n    device_model: pld.model,\n    device_id: pld.id,\n    device_name: pld.name,\n    device_type: pld.type,\n    parent_device_id: attrs.id || pld.pid\n}\n\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(10),\n    send_time: new Date().valueOf(),\n    message_type: \"device_manage\",\n    device_id: pld.id,\n    operation: \"reg\",\n    profile: props\n}\n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 740,
        "wires": [
            [
                "abf7b206f8c26611",
                "690324fcc501f230"
            ]
        ]
    },
    {
        "id": "60b7f9dbb6ddb214",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "device_leave",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_ctrl;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.id,\n    dev: pld.id\n}\ntopic = common.expandTopic.expand(topic, ids);\n\nlet props = {\n    org_id: pld.dom_id,\n    manufacturer: pld.vendor,\n    device_model: pld.model,\n    device_id: pld.id,\n    parent_device_id: attrs.id    \n}\n\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(10),\n    send_time: new Date().valueOf(),\n    message_type: \"device_manage\",\n    device_id: pld.id,\n    operation: \"unreg\",\n    profile: props\n}\n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 800,
        "wires": [
            [
                "abf7b206f8c26611",
                "bbc7f55fbfcaaa36"
            ]
        ]
    },
    {
        "id": "690324fcc501f230",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 800,
        "wires": []
    },
    {
        "id": "bbc7f55fbfcaaa36",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 880,
        "wires": []
    },
    {
        "id": "75cfdef15b3f4269",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "设备事件",
        "func": "let hd = msg.payload.hd;\nlet attrs = msg.payload.device && msg.payload.device.attrs;\nif ( attrs && hd.entry && hd.entry.type == \"evt\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "e81a648577ee5ad4",
                "dc5c46c2f37abd3c"
            ]
        ]
    },
    {
        "id": "e81a648577ee5ad4",
        "type": "switch",
        "z": "6964f3903689fe45",
        "name": "请求/响应",
        "property": "payload.hd.stp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 420,
        "wires": [
            [
                "641d14d6c4e9754f",
                "99def139f2fbdc0f"
            ],
            [
                "b7f96919c0750c4b"
            ]
        ]
    },
    {
        "id": "f439a04eb625bde9",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "设备服务",
        "func": "let hd = msg.payload.hd;\nlet attrs = msg.payload.device && msg.payload.device.attrs;\nif ( attrs && hd.entry && hd.entry.type == \"svc\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 500,
        "wires": [
            [
                "3104fe5fe70a94ac",
                "dc5c46c2f37abd3c"
            ]
        ]
    },
    {
        "id": "3104fe5fe70a94ac",
        "type": "switch",
        "z": "6964f3903689fe45",
        "name": "请求/响应",
        "property": "payload.hd.stp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 500,
        "wires": [
            [],
            [
                "641d14d6c4e9754f",
                "99def139f2fbdc0f"
            ]
        ]
    },
    {
        "id": "99def139f2fbdc0f",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "5ddb2a13593bfb11",
        "type": "function",
        "z": "6964f3903689fe45",
        "name": "事件上报",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet attrs = msg.payload.device.attrs;\nlet topic = data.topics.platform.pubs.plf_dev_evt;\nlet ids = {\n    dom: attrs.dom_id,\n    pdev: attrs.pid,\n    dev: attrs.id\n}\ntopic = common.expandTopic.expand(topic, ids);\nlet payload = {\n    tsl_version: \"1.0\",\n    message_id: common.guid(10),\n    message_type: \"event_notify\",\n    device_id: attrs.id,\n    send_time: new Date().valueOf(),\n    events:[{\n        identifier: hd.entry.id,\n        parameters: common.objToTslProps(pld)\n    }]\n}\n\nreturn {\n    topic: topic,\n    payload: payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 440,
        "wires": [
            [
                "417b33e037afcae7",
                "abf7b206f8c26611"
            ]
        ]
    },
    {
        "id": "417b33e037afcae7",
        "type": "debug",
        "z": "6964f3903689fe45",
        "name": "事件上报",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 440,
        "wires": []
    },
    {
        "id": "3706c9d9873aa1ba",
        "type": "mqtt in",
        "z": "c9e1dc3a36bd6482",
        "name": "push平台订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "ab52a17982312cab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "9c977920b20be95a"
            ]
        ]
    },
    {
        "id": "9c977920b20be95a",
        "type": "json",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "ffa1b41dc31ee481",
                "297a8792a867b5a7",
                "40f8481d20190f6b"
            ]
        ]
    },
    {
        "id": "ffa1b41dc31ee481",
        "type": "debug",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "8908f81ed044fed6",
        "type": "function",
        "z": "c9e1dc3a36bd6482",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\nlet ids = data.ids;\n\n\n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.platform.subs)\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.platform.services)\n    })    \n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 160,
        "wires": [
            [
                "3706c9d9873aa1ba",
                "3598472cf62e6620",
                "49ce440e229a89e1"
            ]
        ]
    },
    {
        "id": "2b593455b73cf3d9",
        "type": "link in",
        "z": "c9e1dc3a36bd6482",
        "name": "订阅输入",
        "links": [
            "aee4451746d9872a"
        ],
        "x": 105,
        "y": 160,
        "wires": [
            [
                "8908f81ed044fed6"
            ]
        ]
    },
    {
        "id": "3598472cf62e6620",
        "type": "debug",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 240,
        "wires": []
    },
    {
        "id": "2433f4e34ba1b42c",
        "type": "function",
        "z": "c9e1dc3a36bd6482",
        "name": "发布主题",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 360,
        "wires": [
            [
                "fb74b7c132137f31",
                "e61b6a4bb4822b7f",
                "c5433f6395db8268",
                "5726185f30771789"
            ]
        ]
    },
    {
        "id": "fb74b7c132137f31",
        "type": "mqtt out",
        "z": "c9e1dc3a36bd6482",
        "name": "平台发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8ca095982007a8dc",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "bdaf4010e521d69d",
        "type": "link in",
        "z": "c9e1dc3a36bd6482",
        "name": "mqtt发布",
        "links": [
            "abf7b206f8c26611"
        ],
        "x": 105,
        "y": 360,
        "wires": [
            [
                "2433f4e34ba1b42c"
            ]
        ]
    },
    {
        "id": "53cc0f96b7b22814",
        "type": "http response",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 740,
        "wires": []
    },
    {
        "id": "bb26c1333da0ac90",
        "type": "http request",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 800,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "e61b6a4bb4822b7f",
        "type": "debug",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 440,
        "wires": []
    },
    {
        "id": "c5433f6395db8268",
        "type": "debug",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "297a8792a867b5a7",
        "type": "debug",
        "z": "c9e1dc3a36bd6482",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "40f8481d20190f6b",
        "type": "link out",
        "z": "c9e1dc3a36bd6482",
        "name": "平台-订阅输出",
        "mode": "link",
        "links": [
            "155a64e3762846b1"
        ],
        "x": 725,
        "y": 160,
        "wires": []
    },
    {
        "id": "49ce440e229a89e1",
        "type": "mqtt in",
        "z": "c9e1dc3a36bd6482",
        "name": "平台订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "8ca095982007a8dc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "9c977920b20be95a"
            ]
        ]
    },
    {
        "id": "5726185f30771789",
        "type": "mqtt out",
        "z": "c9e1dc3a36bd6482",
        "name": "push平台发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ab52a17982312cab",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "155a64e3762846b1",
        "type": "link in",
        "z": "0ad1e253c2fe408d",
        "name": "平台接口处理输入",
        "links": [
            "40f8481d20190f6b"
        ],
        "x": 255,
        "y": 200,
        "wires": [
            [
                "f30351e315c994c5"
            ]
        ]
    },
    {
        "id": "f30351e315c994c5",
        "type": "switch",
        "z": "0ad1e253c2fe408d",
        "name": "",
        "property": "payload.message_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "properties_get",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "properties_set",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_manage_notify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 200,
        "wires": [
            [
                "3a2f5572250eb8c2"
            ],
            [
                "fc58b322ec13ee22"
            ],
            [
                "3794c3485eceea0e"
            ]
        ]
    },
    {
        "id": "3a2f5572250eb8c2",
        "type": "function",
        "z": "0ad1e253c2fe408d",
        "name": "设备查询",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 180,
        "wires": [
            [
                "6a9153169a625269"
            ]
        ]
    },
    {
        "id": "fc58b322ec13ee22",
        "type": "function",
        "z": "0ad1e253c2fe408d",
        "name": "设备属性设置",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\n\nlet payload = msg.payload;\nlet devId = payload.device_id;\n\n\n\nlet hd = {\n     pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n\n    to: {\n        type: \"dev\",\n        id: devId,\n    },\n    entry: {\n        type: \"svc\",\n        id: \"set\"\n    },\n    sid: payload.message_id,\n    stp: 0\n}\n\nlet pld = {id: devId};\ncommon.tslPropsToObj(payload.properties, pld);\n\nreturn {\n    payload: {\n        hd: hd, \n        pld: pld\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 240,
        "wires": [
            [
                "4bfec654048b99e1",
                "96c5a1387b5fa911"
            ]
        ]
    },
    {
        "id": "4bfec654048b99e1",
        "type": "debug",
        "z": "0ad1e253c2fe408d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "96c5a1387b5fa911",
        "type": "link out",
        "z": "0ad1e253c2fe408d",
        "name": "",
        "mode": "link",
        "links": [
            "a5aed34a3542f55c"
        ],
        "x": 825,
        "y": 240,
        "wires": []
    },
    {
        "id": "6a9153169a625269",
        "type": "debug",
        "z": "0ad1e253c2fe408d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "3794c3485eceea0e",
        "type": "function",
        "z": "0ad1e253c2fe408d",
        "name": "入网/脱网",
        "func": "let data = global.get(\"data\");\n\nlet payload = msg.payload;\nlet profile = payload.profile;\nlet operation = payload.operation == \"unreg\" ? \"device_leave\" : \"device_joined\"\n\nlet hd = {\n    entry: {\n        type: \"evt\",\n        id: operation\n    }\n}\n\nlet pld = {\n    id: profile.device_id,\n    app_id: data.ids.app,\n    dom_id: profile.org_id,\n    pid: profile.parent_device_id,\n    name: profile.device_name,\n    desc: profile.remark,\n    model: profile.device_model,\n    vendor: profile.manufacturer\n}\n\nlet topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n\nlet _msg = {\n    id: pld.id,\n    payload: {\n        hd: hd,\n        pld: pld\n    },\n    topic: topic\n}\n\n\n\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "496753a4c9d401e5",
                "ca732274f9fced55"
            ]
        ]
    },
    {
        "id": "496753a4c9d401e5",
        "type": "link out",
        "z": "0ad1e253c2fe408d",
        "name": "平台入网脱网输出",
        "mode": "link",
        "links": [
            "4912ce5cc7d91c00"
        ],
        "x": 825,
        "y": 340,
        "wires": []
    },
    {
        "id": "ca732274f9fced55",
        "type": "debug",
        "z": "0ad1e253c2fe408d",
        "name": "平台入网脱网输出",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "6b9b0f882ae2a52d",
        "type": "function",
        "z": "197d3e4fa24b0d4f",
        "name": "设备入网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_joined\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "8ee089d1bdafe6fa",
                "9e36cfb84b7f726a"
            ]
        ]
    },
    {
        "id": "4ec7ce7fdaf4d1c0",
        "type": "inject",
        "z": "197d3e4fa24b0d4f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "6b9b0f882ae2a52d"
            ]
        ]
    },
    {
        "id": "9e36cfb84b7f726a",
        "type": "debug",
        "z": "197d3e4fa24b0d4f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "8ee089d1bdafe6fa",
        "type": "link out",
        "z": "197d3e4fa24b0d4f",
        "name": "",
        "mode": "link",
        "links": [
            "68950cc0a8d36b24"
        ],
        "x": 555,
        "y": 160,
        "wires": []
    },
    {
        "id": "78e8371679b0002a",
        "type": "function",
        "z": "197d3e4fa24b0d4f",
        "name": "设备脱网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_leave\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "8ee089d1bdafe6fa"
            ]
        ]
    },
    {
        "id": "590bfdfd99cf28a0",
        "type": "inject",
        "z": "197d3e4fa24b0d4f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "78e8371679b0002a"
            ]
        ]
    },
    {
        "id": "a5aed34a3542f55c",
        "type": "link in",
        "z": "b98d81774a39f577",
        "name": "控制设备输入",
        "links": [
            "21290856fdc17bf5",
            "aba9c53c961e20ad",
            "86248ce81c2f0ae7",
            "bbbabbbac3b1536b",
            "96c5a1387b5fa911",
            "b1f9c6e0689535d1"
        ],
        "x": 325,
        "y": 460,
        "wires": [
            [
                "2e37f747894504f9"
            ]
        ]
    },
    {
        "id": "2e37f747894504f9",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "主题",
        "func": "msg.topic = \"0/0/0/0/dev/\" + msg.payload.hd.to.id + \"/0/0\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "168ae8e51394fea5",
                "e9d1e50956367604"
            ]
        ]
    },
    {
        "id": "177dc66ad0487383",
        "type": "link out",
        "z": "b98d81774a39f577",
        "name": "北向输入",
        "mode": "link",
        "links": [
            "bcb80ed091975c9a",
            "6a93f55caada7f66",
            "b030fc2c10509130"
        ],
        "x": 1285,
        "y": 240,
        "wires": []
    },
    {
        "id": "168ae8e51394fea5",
        "type": "mqtt out",
        "z": "b98d81774a39f577",
        "name": "北向输入发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b5ef31a7a90ee4e8",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "c5f52b827266a88e",
        "type": "mqtt in",
        "z": "b98d81774a39f577",
        "name": "北向输出订阅",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "b5ef31a7a90ee4e8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "c1804ac331e12111"
            ]
        ]
    },
    {
        "id": "1e41535f13ce139e",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "北向连接",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n \nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    cleansession: false,\n    force: false,\n}\nmsg.broker.clientid = \"north_\" + common.guid(8)\n\nObject.assign(msg.broker, data.shadows.mqtt.north.broker);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "a858bdf6d2a337ff",
                "62e4127ebeb34862",
                "c926fe363db9aca7"
            ]
        ]
    },
    {
        "id": "a858bdf6d2a337ff",
        "type": "mqtt in",
        "z": "b98d81774a39f577",
        "name": "北向连接",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "b5ef31a7a90ee4e8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 820,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "62e4127ebeb34862",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "北向输出订阅",
        "func": "    // \"+/+/dev/ESP8266x0006cf1d/+/+/+/+\",\n    // \"+/+/dev/0x00158d000353c53f/+/+/+/+\",\n    // \"+/+/dev/ESP8266x008f8517/+/+/+/+\"\nlet topics = [\n    \"+/+/dev/+/+/+/+/+\"\n]\nnode.send({\n        action: \"subscribe\",\n        topic: topics\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 240,
        "wires": [
            [
                "c5f52b827266a88e"
            ]
        ]
    },
    {
        "id": "fa22f0cb391d0bc4",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "设备ID",
        "func": "msg.id =  msg.topic.split(\"/\")[3]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 240,
        "wires": [
            [
                "177dc66ad0487383",
                "8975cc537fc27c59"
            ]
        ]
    },
    {
        "id": "f626e79f1785249d",
        "type": "link in",
        "z": "b98d81774a39f577",
        "name": "连接输入",
        "links": [
            "3345e0db4c61d8f8"
        ],
        "x": 335,
        "y": 140,
        "wires": [
            [
                "1e41535f13ce139e"
            ]
        ]
    },
    {
        "id": "8975cc537fc27c59",
        "type": "debug",
        "z": "b98d81774a39f577",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 200,
        "wires": []
    },
    {
        "id": "d2c66421c615d029",
        "type": "mqtt in",
        "z": "b98d81774a39f577",
        "name": "北向边缘输出订阅",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "b5ef31a7a90ee4e8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 670,
        "y": 300,
        "wires": [
            [
                "56a7a090db09b8c2"
            ]
        ]
    },
    {
        "id": "c926fe363db9aca7",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "北向边缘输出订阅",
        "func": "node.send({\n        action: \"subscribe\",\n        topic: \"+/+/+/+/edg/+/+/+\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "d2c66421c615d029"
            ]
        ]
    },
    {
        "id": "cea4b2ce5deffd54",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "边缘ID",
        "func": "msg.id =  msg.topic.split(\"/\")[5]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "627971cad7053833",
                "ab27fe8d58f67e6c"
            ]
        ]
    },
    {
        "id": "627971cad7053833",
        "type": "link out",
        "z": "b98d81774a39f577",
        "name": "北向边缘事件输入",
        "mode": "link",
        "links": [
            "eddf2eca5d8ed190"
        ],
        "x": 1285,
        "y": 300,
        "wires": []
    },
    {
        "id": "ab27fe8d58f67e6c",
        "type": "debug",
        "z": "b98d81774a39f577",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 400,
        "wires": []
    },
    {
        "id": "e9d1e50956367604",
        "type": "debug",
        "z": "b98d81774a39f577",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "4912ce5cc7d91c00",
        "type": "link in",
        "z": "b98d81774a39f577",
        "name": "控制设备北向输出",
        "links": [
            "58223b63f110e16a",
            "496753a4c9d401e5"
        ],
        "x": 325,
        "y": 700,
        "wires": [
            [
                "9c3cc12c0c76c859"
            ]
        ]
    },
    {
        "id": "9c3cc12c0c76c859",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "主题",
        "func": "msg.topic = msg.topic || \"0/0/dev/\" + msg.id + \"/0/0/0/0\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 700,
        "wires": [
            [
                "36c7966bb1d52b87",
                "c0429f0c864ce135"
            ]
        ]
    },
    {
        "id": "36c7966bb1d52b87",
        "type": "mqtt out",
        "z": "b98d81774a39f577",
        "name": "北向输出发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b5ef31a7a90ee4e8",
        "x": 650,
        "y": 700,
        "wires": []
    },
    {
        "id": "c0429f0c864ce135",
        "type": "debug",
        "z": "b98d81774a39f577",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 800,
        "wires": []
    },
    {
        "id": "c1804ac331e12111",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "转换",
        "func": "\nif (Buffer.isBuffer(msg.payload))\n    msg.payload = msg.payload.toJSON();\nelse {\n    try{\n        msg.payload = JSON.parse(msg.payload);\n    }catch(e){}\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 240,
        "wires": [
            [
                "fa22f0cb391d0bc4"
            ]
        ]
    },
    {
        "id": "56a7a090db09b8c2",
        "type": "function",
        "z": "b98d81774a39f577",
        "name": "转换",
        "func": "\nif (Buffer.isBuffer(msg.payload))\n    msg.payload = msg.payload.toJSON();\nelse {\n    try{\n        msg.payload = JSON.parse(msg.payload);\n    }catch(e){}\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 300,
        "wires": [
            [
                "cea4b2ce5deffd54"
            ]
        ]
    },
    {
        "id": "e3da61b8c5c3d51f",
        "type": "http request",
        "z": "a7e9ad408343191c",
        "name": "http获取设备",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://nd-iot-edge.debug.ndaeweb.com/dio/shadows_get_devices",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "b12f3a934a133f6d",
                "473fd6871ffc76d4"
            ]
        ]
    },
    {
        "id": "e80d47c6f0838962",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "同步设备数据",
        "props": [
            {
                "p": "payload.edg_id",
                "v": "ndiot-plf-bfy",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 300,
        "wires": [
            [
                "6105a1342f43d181"
            ]
        ]
    },
    {
        "id": "b12f3a934a133f6d",
        "type": "debug",
        "z": "a7e9ad408343191c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 440,
        "wires": []
    },
    {
        "id": "473fd6871ffc76d4",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "设备",
        "func": "let devices = msg.payload;\n\nfor(let i = devices.length - 1; i >= 0; i--) {\n    let device = devices[i]\n    delete device._id;\n    node.send({\n        payload: device\n    })\n    \n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 320,
        "wires": [
            [
                "6651096d130ed8ee",
                "f5af52c04a097c59"
            ]
        ]
    },
    {
        "id": "6651096d130ed8ee",
        "type": "debug",
        "z": "a7e9ad408343191c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "f5af52c04a097c59",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "",
        "func": "let common = global.get(\"common\")\nlet dev = msg.payload;\nif (dev && dev.pid && dev.pid === \"ESP8266x0006cf1d\") {\n    let state = flow.get(\"state\");\n\n    let hd = {\n\n        to: {\n            type: \"dev\",\n            id: dev.id,\n        },\n        entry: {\n            type: \"svc\",\n            id: \"set\"\n        },\n        sid: common.guid(10),\n        stp: 0\n    }\n    \n\n\n    let pld = {\n        state: state ? \"on\" : \"off\"\n    };        \n\n\n    node.send({\n        payload: {\n            hd: hd,\n            pld: pld\n        }\n    })\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 520,
        "wires": [
            [
                "b2733dc839ac646f",
                "434b14ae6e1cfe2c"
            ]
        ]
    },
    {
        "id": "6105a1342f43d181",
        "type": "change",
        "z": "a7e9ad408343191c",
        "name": "on",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "e3da61b8c5c3d51f"
            ]
        ]
    },
    {
        "id": "11ad4c2504fd4020",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "同步设备数据",
        "props": [
            {
                "p": "payload.edg_id",
                "v": "ndiot-plf-bfy",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "0d993b1cf28068be"
            ]
        ]
    },
    {
        "id": "0d993b1cf28068be",
        "type": "change",
        "z": "a7e9ad408343191c",
        "name": "off",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 380,
        "wires": [
            [
                "e3da61b8c5c3d51f"
            ]
        ]
    },
    {
        "id": "b2733dc839ac646f",
        "type": "link out",
        "z": "a7e9ad408343191c",
        "name": "",
        "mode": "link",
        "links": [
            "a5aed34a3542f55c"
        ],
        "x": 1235,
        "y": 520,
        "wires": []
    },
    {
        "id": "434b14ae6e1cfe2c",
        "type": "debug",
        "z": "a7e9ad408343191c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 600,
        "wires": []
    },
    {
        "id": "8590583325d03bf1",
        "type": "comment",
        "z": "a7e9ad408343191c",
        "name": "设备入网",
        "info": "",
        "x": 220,
        "y": 800,
        "wires": []
    },
    {
        "id": "f0a708410d01c224",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "入网",
        "props": [
            {
                "p": "action",
                "v": "device_joined",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 900,
        "wires": [
            [
                "d5bcd897f2aece01"
            ]
        ]
    },
    {
        "id": "ecad0bb6dbd453aa",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "设备",
        "func": "\nlet hd = {\n    entry: {\n        type: \"evt\",\n        id: msg.action\n    }\n}\n\nlet pld = {\n    id: \"ESP8266x0098b1f8\",\n    app_id: \"ndiot\",\n    dom_id: \"test\",\n    pid: null,\n    desc: \"测试b1f8\",\n    model: \"FZYTACGREE\",\n    vendor: \"ND\",\n    type: \"AC\"\n}\n\nlet topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n\nlet _msg = {\n    id: pld.id,\n    payload: {\n        hd: hd,\n        pld: pld\n    },\n    topic: topic\n}\n\n\n\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1220,
        "wires": [
            [
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "58223b63f110e16a",
        "type": "link out",
        "z": "a7e9ad408343191c",
        "name": "",
        "mode": "link",
        "links": [
            "4912ce5cc7d91c00"
        ],
        "x": 955,
        "y": 920,
        "wires": []
    },
    {
        "id": "927b326833fb9110",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "脱网",
        "props": [
            {
                "p": "action",
                "v": "device_leave",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "3536e941146da944",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "",
        "func": "msg = {\n\t\"topic\" : \"0/0/0/0/dev/ESP8266x00c66764/0/0\",\n\t\"payload\" : {\n\t\t\"hd\" : {\n\t\t\t\"pref\" : {\n\t\t\t\t\"app\" : \"ndiot\",\n\t\t\t\t\"dom\" : \"\"\n\t\t\t},\n\t\t\t\"from\" : {\n\t\t\t\t\"type\" : \"0\",\n\t\t\t\t\"id\" : \"0\"\n\t\t\t},\n\t\t\t\"to\" : {\n\t\t\t\t\"type\" : \"dev\",\n\t\t\t\t\"id\" : \"ESP8266x00c66764\"\n\t\t\t},\n\t\t\t\"entry\" : {\n\t\t\t\t\"type\" : \"svc\",\n\t\t\t\t\"id\" : \"set\"\n\t\t\t},\n\t\t\t\"sid\" : \"abc231662017771823\",\n\t\t\t\"stp\" : 0\n\t\t},\n\t\t\"pld\" : {\n\t\t\t\"id\" : \"ESP8266x00c66764\",\n\t\t\t\"temperature\" : 28,\n\t\t\t\"mode\" : \"cool\",\n\t\t\t\"power\" : \"on\"\n\t\t}\n\t}\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1280,
        "wires": [
            [
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "e5c57b4479921a89",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 1280,
        "wires": [
            [
                "3536e941146da944"
            ]
        ]
    },
    {
        "id": "fa80fe142d6e43ee",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "",
        "func": "msg = {\n\t\"topic\" : \"0/0/0/0/dev/ESP8266x002bab4d/0/0\",\n\t\"payload\" : {\n\t\t\"hd\" : {\n\t\t\t\"pref\" : {\n\t\t\t\t\"app\" : \"ndiot\",\n\t\t\t\t\"dom\" : \"\"\n\t\t\t},\n\t\t\t\"from\" : {\n\t\t\t\t\"type\" : \"0\",\n\t\t\t\t\"id\" : \"0\"\n\t\t\t},\n\t\t\t\"to\" : {\n\t\t\t\t\"type\" : \"dev\",\n\t\t\t\t\"id\" : \"ESP8266x002bab4d\"\n\t\t\t},\n\t\t\t\"entry\" : {\n\t\t\t\t\"type\" : \"svc\",\n\t\t\t\t\"id\" : \"set\"\n\t\t\t},\n\t\t\t\"sid\" : \"abc231662017771234567890\",\n\t\t\t\"stp\" : 0\n\t\t},\n\t\t\"pld\" : {\n\t\t\t\"id\" : \"ESP8266x002bab4d\",\n\t\t\t\"power\" : \"on\",\n\t\t\t\"mode\" : \"cool\",\n\t\t\t\"temperature\" : 27\n\t\t}\n\t}\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "eb61fef309083c29",
        "type": "inject",
        "z": "a7e9ad408343191c",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 1340,
        "wires": [
            [
                "fa80fe142d6e43ee"
            ]
        ]
    },
    {
        "id": "e9cf99a0357779bf",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "亚太5、6楼75台空调",
        "func": "\nlet devices = [\n\"ESP8266x002cb89d\",\n\"ESP8266x00cc4493\",\n\"ESP8266x002cb98e\",\n\"ESP8266x008d35f7\",\n\"ESP8266x00de16e7\",\n\"ESP8266x00de2887\",\n\"ESP8266x00de11be\",\n\"ESP8266x00de491e\",\n\"ESP8266x00de9a59\",\n\"ESP8266x00deac2d\",\n\"ESP8266x008d8e9b\",\n\"ESP8266x00dda0ca\",\n\"ESP8266x008d3835\",\n\"ESP8266x002cbd85\",\n\"ESP8266x002cb87b\",\n\"ESP8266x002b56e8\",\n\"ESP8266x006d2595\",\n\"ESP8266x002b5323\",\n\"ESP8266x002cba72\",\n\"ESP8266x006d255a\",\n\"ESP8266x006d255b\",\n\"ESP8266x008d3917\",\n\"ESP8266x002cbaba\",\n\"ESP8266x008d23a0\",\n\"ESP8266x00cc13c2\",\n\"ESP8266x002bb62f\",\n\"ESP8266x006d25c8\",\n\"ESP8266x008daf61\",\n\"ESP8266x008d38e4\",\n\"ESP8266x002bc48d\",\n\"ESP8266x00de81bb\",\n\"ESP8266x002cb83c\",\n\"ESP8266x00de49ac\",\n\"ESP8266x002cb89c\",\n\"ESP8266x006d749d\",\n\"ESP8266x006d262b\",\n\"ESP8266x002cc104\",\n\"ESP8266x008d37ac\",\n\"ESP8266x008cfe2c\",\n\"ESP8266x002cbaee\",\n\"ESP8266x00cc259d\",\n\"ESP8266x002cb6cf\",\n\"ESP8266x002bd87d\",\n\"ESP8266x008d37a2\",\n\"ESP8266x008dae52\",\n\"ESP8266x006d74f7\",\n\"ESP8266x006d25a5\",\n\"ESP8266x002c00f8\",\n\"ESP8266x00deadac\",\n\"ESP8266x008d35e4\",\n\"ESP8266x008d2e3c\",\n\"ESP8266x008d378b\",\n\"ESP8266x008d932e\",\n\"ESP8266x002cbd69\",\n\"ESP8266x006d25c6\",\n\"ESP8266x006d749f\",\n\"ESP8266x002b625f\",\n\"ESP8266x008d2e1c\",\n\"ESP8266x002b2026\",\n\"ESP8266x002bcc81\",\n\"ESP8266x002cbdc9\",\n\"ESP8266x006d2594\",\n\"ESP8266x002cb792\",\n\"ESP8266x008d3820\",\n\"ESP8266x008d3782\",\n\"ESP8266x008d35cc\",\n\"ESP8266x002cbbb2\",\n\"ESP8266x006d2583\",\n\"ESP8266x002b55d6\",\n\"ESP8266x006d2537\",\n\"ESP8266x002cb8f6\",\n\"ESP8266x008dc260\",\n\"ESP8266x002bb5d2\",\n\"ESP8266x00dddab2\",\n\"ESP8266x008d2334\"\n    ];\n    \nlet joinOrLeave = (idx) => {\n    let hd = {\n        entry: {\n            type: \"evt\",\n            id: msg.action\n        }\n    }\n\n    let pld = {\n        id: devices[idx],\n        app_id: \"ndiot\",\n        dom_id: \"nd\",\n        pid: null,\n        desc: \"福州/亚太/56楼格力空调/\" + (idx+1) +\"号\",\n        model: \"FZYTACGREE\",\n        vendor: \"ND\",\n        type: \"AC\"\n    }  \n    pld.name = pld.desc;\n    \n    \n    let topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n    \n    let _msg = {\n        id: pld.id,\n        payload: {\n            hd: hd,\n            pld: pld\n        },\n        topic: topic\n    }\n    \n    node.send(_msg);\n    \n\n}\n\nlet idx = 0;\n\nlet start = () => {\n    if(idx < devices.length) {\n        joinOrLeave(idx);\n        setTimeout(() => {\n            start();   \n        }, 1000)\n\n    }\n    idx++;\n}\n\nstart();\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 840,
        "wires": [
            [
                "8c3489842ec5c5ae",
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "8c3489842ec5c5ae",
        "type": "debug",
        "z": "a7e9ad408343191c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "7b05cdb543d55079",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "长乐/会展/空调",
        "func": "\nlet devices = [\n\"ESP8266x004ac032\",\n\"ESP8266x00c02bbb\",\n\"ESP8266x00c05283\",\n\"ESP8266x00c08aa9\",\n\"ESP8266x00c07ff8\",\n\"ESP8266x00c00186\",\n\"ESP8266x004a5bf8\",\n\"ESP8266x004a5971\",\n\"ESP8266x00c0504f\",\n\"ESP8266x00c03831\",\n\"ESP8266x00491ed3\"\n    ];\n    \nlet joinOrLeave = (idx) => {\n    let hd = {\n        entry: {\n            type: \"evt\",\n            id: msg.action\n        }\n    }\n\n    let pld = {\n        id: devices[idx],\n        app_id: \"ndiot\",\n        dom_id: \"test\",\n        pid: null,\n        desc: \"长乐/会展/空调/\" + (idx+10) +\"号\",\n        model: \"ACPGDTM7000F\",\n        vendor: \"ND\",\n        type: \"AC\"\n    }  \n    \n    \n    let topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n    \n    let _msg = {\n        id: pld.id,\n        payload: {\n            hd: hd,\n            pld: pld\n        },\n        topic: topic\n    }\n    \n    node.send(_msg);\n    \n\n}\n\nlet idx = 0;\n\nlet start = () => {\n    if(idx < devices.length) {\n        joinOrLeave(idx);\n        setTimeout(() => {\n            start();   \n        }, 1000)\n\n    }\n    idx++;\n}\n\nstart();\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 900,
        "wires": [
            [
                "58223b63f110e16a",
                "8c3489842ec5c5ae"
            ]
        ]
    },
    {
        "id": "b420914baa33ba39",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "Z3协调器新ID",
        "func": "\nlet devices = [\n\"ndiotbcff4d06cf1d\"\n    ];\n    \nlet joinOrLeave = (idx) => {\n    let hd = {\n        entry: {\n            type: \"evt\",\n            id: msg.action\n        }\n    }\n\n    let pld = {\n        id: devices[idx],\n        app_id: \"ndiot\",\n        dom_id: \"test-nd\",\n        pid: null,\n        desc: \"长乐/会展/Z3协调器/\" + devices[idx] ,\n        model: \"COM-PENET-Z3\",\n        vendor: \"ND\",\n        type: \"CO\"\n    }  \n    \n    \n    let topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n    \n    let _msg = {\n        id: pld.id,\n        payload: {\n            hd: hd,\n            pld: pld\n        },\n        topic: topic\n    }\n    \n    node.send(_msg);\n    \n\n}\n\nlet idx = 0;\n\nlet start = () => {\n    if(idx < devices.length) {\n        joinOrLeave(idx);\n        setTimeout(() => {\n            start();   \n        }, 1000)\n\n    }\n    idx++;\n}\n\nstart();\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 980,
        "wires": [
            [
                "8c3489842ec5c5ae",
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "d5bcd897f2aece01",
        "type": "function",
        "z": "a7e9ad408343191c",
        "name": "云启设备",
        "func": "\nlet devices = [\n\"ndiot485519614d25\",\n\"ndiot485519622888\"\n    ];\n    \nlet joinOrLeave = (idx) => {\n    let hd = {\n        entry: {\n            type: \"evt\",\n            id: msg.action\n        }\n    }\n\n    let pld = {\n        id: devices[idx],\n        app_id: \"ndiot\",\n        dom_id: \"test-nd\",\n        pid: null,\n        desc: \"武汉云启/232透传/\" + devices[idx] ,\n        model: \"COM-PENET\",\n        vendor: \"ND\",\n        type: \"\"\n    }  \n    \n    \n    let topic = \"0/0/dev/\" + pld.id + \"/0/0/evt/\"+ hd.entry.id\n    \n    let _msg = {\n        id: pld.id,\n        payload: {\n            hd: hd,\n            pld: pld\n        },\n        topic: topic\n    }\n    \n    node.send(_msg);\n    \n\n}\n\nlet idx = 0;\n\nlet start = () => {\n    if(idx < devices.length) {\n        joinOrLeave(idx);\n        setTimeout(() => {\n            start();   \n        }, 1000)\n\n    }\n    idx++;\n}\n\nstart();\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1060,
        "wires": [
            [
                "58223b63f110e16a"
            ]
        ]
    },
    {
        "id": "15cb59640cc685af",
        "type": "mqtt out",
        "z": "e83211ed03a904de",
        "name": "北向发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b5ef31a7a90ee4e8",
        "x": 1340,
        "y": 480,
        "wires": []
    },
    {
        "id": "6ef82f991558bdea",
        "type": "function",
        "z": "e83211ed03a904de",
        "name": "topic",
        "func": "if(!msg.topic)\n    msg.topic = \"0/0/0/0/dev/\"+ msg.id +\"/0/0\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "15cb59640cc685af"
            ]
        ]
    },
    {
        "id": "56fb1fef80c1ead9",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "handshake",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":2,\"cmd_sid\":112}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "ea78a604be572a85",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "reboot",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":3, \"cmd_sid\":112}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 500,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "8ee326fb53fd3a98",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "penet",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":7}",
                "vt": "json"
            },
            {
                "p": "payload.pld.60500",
                "v": "[246,1,1,1,249,111]",
                "vt": "bin"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "04ed946683f18fab",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "resetconfig",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":11}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "99d9ff0c32de7474",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 560,
        "wires": [
            [
                "b98812096e5c2c5a"
            ]
        ]
    },
    {
        "id": "aa9f6ba9f08aefc9",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "ESP8266x0098b1f8",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "ESP8266x0098b1f8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 420,
        "wires": [
            [
                "6ef82f991558bdea"
            ]
        ]
    },
    {
        "id": "f3f1e81595a4e64c",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "config",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":1}",
                "vt": "json"
            },
            {
                "p": "payload.pld",
                "v": "{\"61007\":1152}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 740,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "f323c3c708e02547",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "debug=false",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":1}",
                "vt": "json"
            },
            {
                "p": "payload.pld",
                "v": "{\"61006\":0}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "a3e2ce6aaf48e7ec",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "debug=true",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":1}",
                "vt": "json"
            },
            {
                "p": "payload.pld",
                "v": "{\"61006\":1}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 350,
        "y": 860,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "7f6fed63b5d3ea50",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "ndiotbcff4d06cf1d",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "ndiotbcff4d06cf1d",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 540,
        "wires": [
            [
                "6ef82f991558bdea"
            ]
        ]
    },
    {
        "id": "e3f9d8bdd9cb5df8",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "ndiot30839898b1f8",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "ndiot30839898b1f8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 640,
        "wires": [
            [
                "6ef82f991558bdea"
            ]
        ]
    },
    {
        "id": "02605cac9a7be7a2",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "云启ndiot485519614d25",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "ndiot485519614d25",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 740,
        "wires": [
            [
                "6ef82f991558bdea"
            ]
        ]
    },
    {
        "id": "8eb54d161b03d751",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "penet-on",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":7}",
                "vt": "json"
            },
            {
                "p": "payload.pld.60500",
                "v": "[246,1,1,1,249,111]",
                "vt": "bin"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "cddc4ba7d78261a9",
        "type": "inject",
        "z": "e83211ed03a904de",
        "name": "penet-off",
        "props": [
            {
                "p": "payload.hd",
                "v": "{\"cmd_id\":7}",
                "vt": "json"
            },
            {
                "p": "payload.pld.60500",
                "v": "[246,1,5,0,252,111]",
                "vt": "bin"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 340,
        "y": 360,
        "wires": [
            [
                "99d9ff0c32de7474"
            ]
        ]
    },
    {
        "id": "b98812096e5c2c5a",
        "type": "change",
        "z": "e83211ed03a904de",
        "name": "云启ndiot485519622888",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "ndiot485519622888",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 780,
        "wires": [
            [
                "6ef82f991558bdea"
            ]
        ]
    }
]